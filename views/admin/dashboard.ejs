<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<!--Content space -->
<div class="flex-1  bg-main-white">
    <!-- Heading nav -->
    <div class="pt-6 h-12">
        <div class="px-6 py-2 flex justify-between items-center">
            <h1 class="text-2xl font-semibold text-gray-900 ">Dashboard</h1>
        </div>
    </div>

    <!-- page content -->
    <div>
        <main class="flex-1 p-8 bg-gray-100">
            <!-- Stats Cards -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-gray-500 text-sm mb-2 font-medium">Total Sales</h3>
                    <p class="text-3xl font-bold">₹<%= totalSales.toLocaleString() %>
                    </p>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-gray-500 text-sm mb-2 font-medium">Total Orders</h3>
                    <p class="text-3xl font-bold">
                        <%= totalOrders.toLocaleString() %>
                    </p>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-gray-500 text-sm mb-2 font-medium">Average Order Value</h3>
                    <p class="text-3xl font-bold">₹<%= averageOrderValue.toLocaleString(undefined,
                            {maximumFractionDigits: 2}) %>
                    </p>
                </div>
                <div class="bg-white rounded-lg shadow p-6">
                    <h3 class="text-gray-500 text-sm mb-2 font-medium">Total Users</h3>
                    <p class="text-3xl font-bold">
                        <%= totalCustomers.toLocaleString() %>
                    </p>
                </div>
            </div>

            <!-- Chart Section -->
            <div class="bg-white rounded-lg shadow p-6 mb-8">
                <form  id="timeFilterForm">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-xl font-bold">Sales Overview</h2>
                        <select name="timeFilter" id="timeFilter" class="border rounded-lg px-4 py-2">
                            <option value="yearly" <%=timeFilter==='yearly' ? 'selected' : '' %>>Yearly</option>
                            <option value="monthly" <%=timeFilter==='monthly' ? 'selected' : '' %>>Monthly</option>
                            <option value="weekly" <%=timeFilter==='weekly' ? 'selected' : '' %>>Weekly</option>
                            <option value="custom" <%=timeFilter==='custom' ? 'selected' : '' %>>Custom</option>
                        </select>
                    </div>

                    <div class="flex gap-4  <%= timeFilter !== 'custom' ? 'hidden' : '' %>" id="customDateInput">
                        <div>
                            <label class="block text-sm font-medium text-gray-700">Start Date</label>
                            <input type="date" name="startDate" value="<%= startDate ? new Date(startDate).toISOString().split('T')[0] : '' %>"
                                class="mt-1 block rounded-md border-gray-300 shadow-sm">
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700">End Date</label>
                            <input type="date" name="endDate" value="<%= startDate ? new Date(endDate).toISOString().split('T')[0] : '' %>"
                                class="mt-1 block rounded-md border-gray-300 shadow-sm">
                        </div>
                        <div class="pt-6">
                            <button type="submit" class="bg-purple-600 text-white px-4 py-2 rounded-lg hover:bg-purple-800">
                                Apply Filters
                            </button>
                        </div>
                    </div>
                    
                </form>
                <canvas id="salesChart" height="100"></canvas>
            </div>

            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">

                <!-- Category Distribution Chart -->
                <div class="bg-white p-6 rounded-xl shadow-sm border-b">
                    <h2 class="text-xl font-semibold mb-4">Category Distribution</h2>
                    <div class="h-80">
                        <canvas id="categoryChart"></canvas>
                    </div>
                </div>

                <!-- Top Products Table -->
                <div class="bg-white rounded-lg shadow">
                    <div class="p-6 border-b">
                        <h2 class="text-xl font-bold">Top 10 Selling Products</h2>
                    </div>
                    <div class="p-6">
                        <table class="w-full">
                            <thead>
                                <tr class="text-left text-gray-500">
                                    <th class="pb-4">Product</th>
                                    <th class="pb-4">Sold</th>
                                    <th class="pb-4">Revenue</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% topProducts.forEach(product=> { %>
                                    <tr class="border-b text-sm">
                                        <td class="py-3">
                                            <%= product.name %>
                                        </td>
                                        <td class="py-3">
                                            <%= product.totalSold %>
                                        </td>
                                        <td class="py-3">₹<%= product.revenue.toLocaleString() %>
                                        </td>
                                    </tr>
                                    <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- top brands -->
                <div class="bg-white rounded-lg shadow">
                    <div class="p-6 border-b">
                        <h2 class="text-xl font-bold">Top 10 Selling Brands</h2>
                    </div>
                    <div class="p-6">
                        <table class="w-full">
                            <thead>
                                <tr class="text-left text-gray-500">
                                    <th class="pb-4">Brand</th>
                                    <th class="pb-4">Sold</th>
                                    <th class="pb-4">Revenue</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% topBrands.forEach(brand=> { %>
                                    <tr class="border-b text-sm">
                                        <td class="py-3">
                                            <%= brand.name %>
                                        </td>
                                        <td class="py-3">
                                            <%= brand.totalSold %>
                                        </td>
                                        <td class="py-3">₹<%= brand.revenue.toLocaleString() %>
                                        </td>
                                    </tr>
                                    <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>

                <!-- Recent Orders -->
                <div class="bg-white rounded-lg shadow">
                    <div class="p-6 border-b">
                        <h2 class="text-xl font-bold">Recent Orders</h2>
                    </div>
                    <div class="p-6">
                        <div class="space-y-4">
                            <%recentOrders.forEach(order=> { %>
                                <div class="flex justify-between items-center border-b pb-4">
                                    <div>
                                        <p class="font-medium">#<%= order.orderNumber %>
                                        </p>
                                        <p class="text-sm text-gray-500">
                                            <%= order.userId.email %>
                                        </p>
                                    </div>
                                    <div class="text-right">
                                        <p class="font-medium">₹<%= order.total.toLocaleString() %>
                                        </p>
                                        <span
                                            class="inline-block px-2 py-1 text-xs text-green-800 bg-green-100 rounded">
                                            <%= order.status %>
                                        </span>
                                    </div>
                                </div>
                                <% }); %>
                        </div>
                    </div>
                </div>

            </div>
        </main>

    </div>

</div>

<script>
    // Sample data for the chart
    const salesChartData = JSON.parse('<%- JSON.stringify(salesChartData) %>');
    const ctx = document.getElementById('salesChart').getContext('2d');
    const salesChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: salesChartData.map(item => item._id),
            datasets: [{
                label: 'Sales',
                data: salesChartData.map(item => item.sales),
                borderColor: '#652fe8',
                tension: 0.1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    ticks: {
                        callback: function (value) {
                            return '₹' + value.toLocaleString();
                        }
                    }
                }
            }
        }
    });

    // Category Distribution Chart

    const categoryData = JSON.parse('<%- JSON.stringify(categoryData) %>');
    console.log(categoryData)
    const categoryCtx = document.getElementById('categoryChart').getContext('2d');
    new Chart(categoryCtx, {
        type: 'doughnut',
        data: {
            labels: categoryData.map(d => d._id),
            datasets: [{
                data: categoryData.map(d => d.total),
                backgroundColor: ['#3B82F6', '#10B981', '#F59E0B', '#EF4444']
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false
        }
    });

    // Time filter change handler
    document.getElementById('timeFilter').addEventListener('change', function (e) {
        const timeFilter = e.target.value;
        const customDateInput = document.getElementById('customDateInput');
        
        if (timeFilter === 'custom') {
            customDateInput.classList.remove('hidden');
        } else {
            customDateInput.classList.add('hidden');
            document.getElementById('timeFilterForm').submit();
        }
    });
    
    const timeFilterForm = document.getElementById('timeFilterForm');
    const timeFilterSelect = document.getElementById('timeFilter');
    const customDateInput = document.getElementById('customDateInput');
    const startDateInput = document.querySelector('input[name="startDate"]');
    const endDateInput = document.querySelector('input[name="endDate"]');

    // Store initial custom date values if they exist
    let savedStartDate = startDateInput.value;
    let savedEndDate = endDateInput.value;

    timeFilterSelect.addEventListener('change', function(e) {
        const isCustom = e.target.value === 'custom';
        
        if (isCustom) {
            // Show custom date inputs and restore saved values if they exist
            customDateInput.classList.remove('hidden');
            startDateInput.value = savedStartDate;
            endDateInput.value = savedEndDate;
        } else {
            // Hide custom date inputs but save their values
            customDateInput.classList.add('hidden');
            savedStartDate = startDateInput.value;
            savedEndDate = endDateInput.value;
            
            // Clear the actual input values when submitting non-custom filters
            startDateInput.value = '';
            endDateInput.value = '';
            
            // Automatically submit the form for non-custom filters
            timeFilterForm.submit();
        }
    });

    timeFilterForm.addEventListener('submit', function(e) {
        const isCustom = timeFilterSelect.value === 'custom';
        
        if (isCustom) {
            // Validate custom date range
            if (!startDateInput.value || !endDateInput.value) {
                e.preventDefault();
                alert('Please select both start and end dates');
                return;
            }
            
            const startDate = new Date(startDateInput.value);
            const endDate = new Date(endDateInput.value);
            
            if (endDate < startDate) {
                e.preventDefault();
                alert('End date must be after start date');
                return;
            }
        }
    });

    // Initialize visibility on page load
    customDateInput.classList.toggle('hidden', timeFilterSelect.value !== 'custom');


</script>

</body>