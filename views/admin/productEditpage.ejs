<link rel="stylesheet" href="/styles/output.css">
<link rel="stylesheet" href="/styles/admin.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.13/cropper.min.js"></script>

<div class="min-h-screen p-4 md:p-8">
    <div class="w-[3/4] ml-24">
        <h2 class="text-3xl font-bold mb-8 text-purple-600">Edit Product</h2>
        <!-- Breadcrumb -->
        <nav class="flex mb-8" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-3">
                <li class="inline-flex items-center">
                    <a href="/admin/dashboard"
                        class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-purple-700">
                        <svg class="w-3 h-3 me-2.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                            fill="currentColor" viewBox="0 0 20 20">
                            <path
                                d="m19.707 9.293-2-2-7-7a1 1 0 0 0-1.414 0l-7 7-2 2a1 1 0 0 0 1.414 1.414L2 10.414V18a2 2 0 0 0 2 2h3a1 1 0 0 0 1-1v-4a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v4a1 1 0 0 0 1 1h3a2 2 0 0 0 2-2v-7.586l.293.293a1 1 0 0 0 1.414-1.414Z" />
                        </svg>
                        Dashboard
                    </a>
                </li>
                <li>
                    <div class="flex items-center">
                        <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                            fill="none" viewBox="0 0 6 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="m1 9 4-4-4-4" />
                        </svg>
                        <a href="/admin/products"
                            class="ms-1 text-sm font-medium text-gray-700 hover:text-purple-700 md:ms-2">Product
                            Management</a>
                    </div>
                </li>
                <li aria-current="page">
                    <div class="flex items-center">
                        <svg class="w-3 h-3 text-gray-400 mx-1" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
                            fill="none" viewBox="0 0 6 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="m1 9 4-4-4-4" />
                        </svg>
                        <span class="ms-1 text-sm font-medium text-gray-500 md:ms-2">Edit Product</span>
                    </div>
                </li>
            </ol>
        </nav>
    </div>
    <!-- Main Content -->
    <div class="max-w-7xl mx-auto">
        <form method="POST" action="/admin/product/edit/<%= product._id %>" enctype="multipart/form-data"
            class="space-y-8" id="editProductForm">
            <!-- Basic Information Section -->
            <div class="bg-white rounded-xl shadow-lg p-6 md:p-8">
                <h2 class="text-3xl font-bold mb-8 text-gray-800">Basic Information</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    <div class="col-span-2">
                        <label for="productName" class="block text-base font-medium text-gray-700 mb-2">Product
                            Name</label>
                        <input type="text" name="productName" id="productName" value="<%= product.productName %>"
                            class="mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                    </div>

                    <div>
                        <label for="price" class="block text-base font-medium text-gray-700 mb-2">Base Price</label>
                        <div class="mt-1 relative rounded-lg shadow-sm">
                            <div class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                                <span class="text-gray-500 text-lg">â‚¹</span>
                            </div>
                            <input type="number" name="price" id="price" value="<%= product.price %>"
                                class="pl-8 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                        </div>
                    </div>

                    <div>
                        <label for="discount" class="block text-base font-medium text-gray-700 mb-2">Discount
                            Percentage</label>
                        <div class="mt-1 relative rounded-lg shadow-sm">
                            <input type="number" name="discount" id="discount" value="<%= product.discount %>"
                                class="block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                            <div class="absolute inset-y-0 right-0 pr-4 flex items-center pointer-events-none">
                                <span class="text-gray-500 text-lg">%</span>
                            </div>
                        </div>
                    </div>

                    <div>
                        <label for="category" class="block text-base font-medium text-gray-700 mb-2">Category</label>
                        <select id="category" name="category"
                            class="mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                            <% if (categories) { %>
                                <% categories.forEach((category)=> { %>
                                    <% if (!category.isDeleted) { %>
                                        <option value="<%= category.categoryName %>"
                                            <%=product.category===category.categoryName ? 'selected' : '' %>>
                                            <%= category.categoryName %>
                                        </option>
                                        <% } %>
                                            <% }) %>
                                                <% } %>
                        </select>
                    </div>

                    <div>
                        <label for="brand" class="block text-base font-medium text-gray-700 mb-2">Brand</label>
                        <input type="text" name="brand" id="brand" value="<%= product.brand %>"
                            class="mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                    </div>

                    <div>
                        <label for="model" class="block text-base font-medium text-gray-700 mb-2">Model</label>
                        <input type="text" name="model" id="model" value="<%= product.model %>"
                            class="mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                    </div>

                    <div>
                        <label for="platform" class="block text-base font-medium text-gray-700 mb-2">Platform/Os</label>
                        <input type="text" name="platform" id="platform" value="<%= product.platform %>"
                            class="mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                    </div>

                    <div>
                        <label for="returnPeriod" class="block text-base font-medium text-gray-700 mb-2">Return Period
                            (Days)</label>
                        <input type="number" name="returnPeriod" id="returnPeriod" value="<%= product.returnPeriod %>"
                            class="mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                    </div>

                    <div>
                        <label for="warranty" class="block text-base font-medium text-gray-700 mb-2">Warranty
                            (Months)</label>
                        <input type="number" name="warranty" id="warranty" value="<%= product.warranty %>"
                            class="mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                    </div>

                    <div class="col-span-2">
                        <label for="additional" class="block text-base font-medium text-gray-700 mb-2">Additional
                            Information</label>
                        <input type="text" name="additional" id="additional" value="<%= product.additional %>"
                            class="mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                    </div>

                    <div class="col-span-2">
                        <label for="description" class="block text-base font-medium text-gray-700 mb-2">Product
                            Description</label>
                        <textarea id="description" name="description" rows="5"
                            class="mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4"><%= product.description %></textarea>
                    </div>
                </div>
            </div>


            <!-- Product Images Section -->
            <div class="bg-white rounded-lg shadow-lg p-8" id="productImageContainer">
                <h2 class="text-2xl font-bold mb-6">Product Images</h2>
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
                    <% for(let i=0; i < 4; i++) { %>
                        <div class="flex flex-col items-center">
                            <div
                                class="w-full h-64 relative border-2 border-gray-300 border-dashed rounded-lg p-4 hover:border-purple-500 transition-colors">
                                <input type="file" class="absolute inset-0 w-full h-full opacity-0 z-10 cursor-pointer"
                                    name="images" accept="image/*" id="file-upload-<%= i + 1 %> "
                                    data-productId="<%= product._id  %>">
                                <div class="h-full w-full flex flex-col items-center justify-center">
                                    <% if (product.images && product.images[i]) { %>
                                        <!-- Delete button -->
                                        <button type="button" data-imageindex="<%= i %>"
                                            data-imagename="<%= product.images[i] %>"
                                            data-productid="<%= product._id  %>"
                                            class="delete-image-btn absolute top-2 right-2 z-[60] bg-red-500 hover:bg-red-700 text-white rounded-full p-1 px-3 shadow-lg transition-colors">
                                            X
                                        </button>
                                        <% } else { %>
                                            <svg class="w-12 h-12 text-gray-400" fill="none" stroke="currentColor"
                                                viewBox="0 0 24 24">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                    d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z">
                                                </path>
                                            </svg>
                                            <p class="mt-2 text-sm text-gray-500">Click or drag to upload</p>
                                            <p class="text-xs text-gray-400">PNG, JPG, JPEG only</p>
                                            <% } %>
                                                <span class="text-purple-500 mt-2 text-xs">
                                                    <%= i===0 ? 'Thumbnail' :'' %>
                                                </span>
                                </div>
                                <img src="<%= product.images[i] %>"
                                    class="absolute inset-0 w-full h-full object-cover rounded-lg"
                                    id="preview-<%= i + 1 %>">
                            </div>
                            <span class="mt-2 text-sm text-gray-500">Image <%= i + 1 %></span>
                        </div>
                        <% } %>
                </div>

                <!-- Image Cropper Modal -->
                <div id="cropperModal"
                    class="hidden flex-grow fixed inset-0 bg-black bg-opacity-50 z-50 flex max-h-[90vh] items-center justify-center">
                    <div class="bg-white rounded-lg w-11/12 md:w-3/4 lg:w-2/3 h-full flex flex-col overflow-hidden">
                        <div class="p-4 border-b">
                            <h3 class="text-xl font-semibold">Crop Image</h3>
                        </div>
                        <div class="p-4 flex items-center justify-center overflow-hidden max-h-[70vh]">
                            <div class="w-full h-full flex items-center justify-center">
                                <img id="cropperImage" src="" alt="Image to crop"
                                    class="max-w-full max-h-full object-contain">
                            </div>
                        </div>
                        <div class="p-4 border-t flex justify-end gap-3">
                            <button id="cancelCrop"
                                class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 transition">
                                Cancel
                            </button>
                            <button id="applyCrop" type="button"
                                class="px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition">
                                Apply Crop
                            </button>
                        </div>
                    </div>
                </div>
            </div>


            <!-- Variants Section -->
            <div class="bg-white rounded-xl shadow-lg p-6 md:p-8">
                <div class="flex justify-between items-center mb-8">
                    <h2 class="text-3xl font-bold text-gray-800">Product Variants</h2>
                    <button type="button" id="addVariant"
                        class="inline-flex items-center px-6 py-3 border border-purple-500 rounded-lg shadow-sm text-base font-medium text-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500">
                        <svg class="mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"
                            stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
                        </svg>
                        Add Variant
                    </button>
                </div>

                <!-- Variants Container -->
                <div id="variantsContainer" class="space-y-8">
                    <% if (product.variants && product.variants.length> 0) { %>
                        <% product.variants.forEach((variant, index)=> { %>
                            <div class="variant-item border-2 border-gray-200 rounded-xl p-6 bg-gray-50" data-variant-id="<%= variant._id %>" >
                                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                                    <!-- Color Selection -->
                                    <div>
                                        <label class="block text-base font-medium text-gray-700 mb-2">Color</label>
                                        <div class="mt-1 flex items-center space-x-4">
                                            <input type="text" name="variants[<%= index %>][color]"
                                                value="<%= variant.color %>" placeholder="e.g., Midnight Blue"
                                                class="colorInput block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                                            <input type="color" name="variants[<%= index %>][colorCode]"
                                                value="<%= variant.colorCode %>"
                                                class="h-12 w-16 rounded border-2 border-gray-300 cursor-pointer">
                                        </div>
                                    </div>

                                    <!-- Storage Option -->
                                    <div>
                                        <label class="block text-base font-medium text-gray-700 mb-2">Storage</label>
                                        <div class="mt-1 flex items-center space-x-4">
                                            <input type="number" name="variants[<%= index %>][storage]"
                                                value="<%= variant.storage %>" placeholder="Size"
                                                class="storage block w-32 rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                                            <select name="variants[<%= index %>][storageUnit]"
                                                class="block w-32 rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                                                <option value="GB" <%=variant.storageUnit==='GB' ? 'selected' : '' %>>GB
                                                </option>
                                                <option value="TB" <%=variant.storageUnit==='TB' ? 'selected' : '' %>>TB
                                                </option>
                                            </select>
                                        </div>
                                    </div>

                                    <!-- Stock -->
                                    <div>
                                        <label class="block text-base font-medium text-gray-700 mb-2">Stock</label>
                                        <input type="number" name="variants[<%= index %>][stock]"
                                            value="<%= variant.stock %>" placeholder="Available quantity" min="0"
                                            class="stock mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                                    </div>

                                    <!-- Additional Price -->
                                    <div>
                                        <label class="block text-base font-medium text-gray-700 mb-2">Additional
                                            Price</label>
                                        <div class="mt-1 relative rounded-lg shadow-sm">
                                            <div
                                                class="absolute inset-y-0 left-0 pl-4 flex items-center pointer-events-none">
                                                <span class="text-gray-500 text-lg">â‚¹</span>
                                            </div>
                                            <input type="number" name="variants[<%= index %>][additionalPrice]"
                                                value="<%= variant.additionalPrice %>" placeholder="0.00"
                                                class="additionalPrice pl-8 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                                        </div>
                                    </div>

                                    <!-- Status -->
                                    <div>
                                        <label class="block text-base font-medium text-gray-700 mb-2">Status</label>
                                        <select name="variants[<%= index %>][status]"
                                            class="status mt-1 block w-full rounded-lg border-2 border-gray-300 shadow-sm focus:border-purple-600 focus:ring focus:ring-purple-200 focus:ring-opacity-50 text-lg py-3 px-4">
                                            <option value="active" <%=variant.status==='active' ? 'selected' : '' %>
                                                >Active</option>
                                            <option value="inactive" <%=variant.status==='inactive' ? 'selected' : '' %>
                                                >Inactive</option>
                                        </select>
                                    </div>
                                </div>

                                <!-- Remove Variant Button -->
                                <div class="mt-8 flex justify-end">
                                    <button type="button"
                                        class="remove-variant inline-flex items-center px-6 py-3 border-2 border-red-200 shadow-sm text-base font-medium rounded-lg text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-colors">
                                        <svg class="mr-2 h-5 w-5" xmlns="http://www.w3.org/2000/svg" fill="none"
                                            viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                        </svg>
                                        Remove Variant
                                    </button>
                                </div>
                            </div>
                            <% }) %>
                                <% } %>
                </div>
            </div>

            <!-- Submit Section -->
            <div class="bg-white rounded-xl shadow-lg p-6 md:p-8 mt-8">
                <div class="flex flex-col md:flex-row justify-end space-y-4 md:space-y-0 md:space-x-6">
                    <button type="button" onclick="history.back()"
                        class="inline-flex items-center justify-center px-8 py-4 border-2 border-gray-300 shadow-sm text-base font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 transition-colors">
                        Cancel
                    </button>
                    <button type="submit" id="submitEditForm"
                        class="inline-flex items-center justify-center px-8 py-4 border-2 border-transparent rounded-lg shadow-sm text-base font-medium text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500 transition-colors">
                        <svg xmlns="http://www.w3.org/2000/svg" width="32" height="24" viewBox="0 0 24 24"
                            style="fill: rgba(255, 255, 255, 1);">
                            <path
                                d="M5 21h14a2 2 0 0 0 2-2V8a1 1 0 0 0-.29-.71l-4-4A1 1 0 0 0 16 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2zm10-2H9v-5h6zM13 7h-2V5h2zM5 5h2v4h8V5h.59L19 8.41V19h-2v-5a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v5H5z">
                            </path>
                        </svg>
                        Update Product
                    </button>
                </div>
            </div>
        </form>

        <!-- Loading Spinner -->
        <div id="loadingSpinner"
            class="hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
            <div class="bg-white rounded-lg p-8 flex flex-col items-center space-y-4">
                <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-purple-600"></div>
                <div class="text-xl font-semibold text-gray-800">Updating Product...</div>
                <div class="text-sm text-gray-600">Please wait while we process your request</div>
            </div>
        </div>


    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>

    let cropper = null;
    let croppedBlobs = [];
    let imageFormat = 'image/jpeg'; // Default format


    const productId = '<%=product._id%>'

    const deletedImages = new Set();
    document.querySelectorAll('.delete-image-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const imageIndex = btn.dataset.imageindex;
            const imageName = btn.dataset.imagename;
            deletedImages.add({ index: imageIndex, name: imageName });

            // Hide the image and show upload UI
            const previewImg = document.querySelector(`#preview-${parseInt(imageIndex) + 1}`);
            console.log(previewImg)
            if (previewImg) {
                previewImg.src = '';
            }
            // Remove the delete button
            btn.remove();
        });
    });

    // to check stock updates
    document.getElementById('variantsContainer').addEventListener('change', async function (e) {
      
        if (e.target.classList.contains('stock')) {
            const variantItem = e.target.closest('.variant-item');
            const variantIndex = Array.from(variantItem.parentElement.children).indexOf(variantItem);
            const newStock = parseInt(e.target.value);
            const variantId= variantItem.dataset.variantId

            try {
                const response = await fetch(`/admin/product/update-stock/${productId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productId: productId,
                        variantUpdates: [{
                            variantId:variantId,
                            newStock: newStock
                        }]
                    })
                });

                const data = await response.json();
                if (!data.success) {
                    e.target.value = e.target.defaultValue;
                    notyf.error(data.message);
                } else {
                    e.target.defaultValue = newStock; 
                    notyf.success("Stock updated")
                }
            } catch (error) {
                console.error('Error updating stock:', error);
                e.target.value = e.target.defaultValue;
                alert('Failed to update stock');
            }
        }
    });


    // Handle form submission
    const form = document.querySelector('form');
    const variants = document.querySelectorAll('.variant-item');

    form.addEventListener('submit', async function (e) {
        e.preventDefault();
        let isValid = true;

        const showError = (field, message) => {
            const errorField = document.createElement("p");
            errorField.className = "text-red-500 text-sm mt-1";
            errorField.textContent = message;
            field.parentElement.appendChild(errorField);
            field.classList.add("border-red-500");
            field.focus();
        };

        const clearErrors = (field) => {
            const errorField = field.parentElement.querySelector(".text-red-500");
            if (errorField) {
                errorField.remove();
            }
            field.classList.remove("border-red-500");
        };

        const fields = [
            { id: "productName", name: "Product Name" },
            { id: "price", name: "Base Price", type: "number", min: 0 },
            { id: "discount", name: "Discount Percentage", type: "number", min: 0, max: 100 },
            { id: "category", name: "Category", type: "select" },
            { id: "brand", name: "Brand" },
            { id: "model", name: "Model" },
            { id: "platform", name: "Platform/OS" },
            { id: "returnPeriod", name: "Return Period", type: "number", min: 0 },
            { id: "warranty", name: "Warranty", type: "number", min: 0 },
            { id: "additional", name: "Additional Information" },
            { id: "description", name: "Description", type: "textarea" },
        ];

        fields.forEach((fieldData) => {
            const field = document.getElementById(fieldData.id);
            clearErrors(field);

            if (fieldData.type === "select" && field.value === "") {
                showError(field, `${fieldData.name} is required.`);
                isValid = false;
            } else if (fieldData.type === "file" && field.files.length === 0) {
                showError(field, `Please upload a ${fieldData.name}.`);
                isValid = false;
            } else if (fieldData.type === "number" && (field.value === "" || isNaN(field.value))) {
                showError(field, `${fieldData.name} must be a valid number.`);
                isValid = false;
            } else if (fieldData.min !== undefined && field.value < fieldData.min) {
                showError(field, `${fieldData.name} must be at least ${fieldData.min}.`);
                isValid = false;
            } else if (fieldData.max !== undefined && field.value > fieldData.max) {
                showError(field, `${fieldData.name} must be less than or equal to ${fieldData.max}.`);
                isValid = false;
            } else if (field.value.trim() === "") {
                showError(field, `${fieldData.name} is required.`);
                isValid = false;
            }
        });

        variants.forEach((variant, index) => {
            const inputs = variant.querySelectorAll('.colorInput, .stock, .additionalPrice');
            inputs.forEach((input) => {
                if (!input.value.trim()) {
                    isValid = false;

                    notyf.error(`Variant ${index + 1}: ${input.name || 'This field'} is required.`);
                }
            });
        });



        if (!isValid) {
            return;
        }


        try {
            showSpinner();
            const formData = new FormData(this);


            // This vil prevent dedault image files
            for (let pair of formData.entries()) {
                if (pair[0] === 'images') {
                    formData.delete('images');
                }
            }

            // Add deleted images information
            formData.append('deletedImages', JSON.stringify(Array.from(deletedImages)));

            // Handle existing images
            const existingImagesData = [];
            document.querySelectorAll('.delete-image-btn').forEach(btn => {
                existingImagesData[btn.dataset.imageindex] = btn.dataset.imagename;
            });

            formData.append('existingImages', JSON.stringify(existingImagesData));

            // Add cropped blobs to formData
            let hasUploadedFiles = false;
            croppedBlobs.forEach((blob, index) => {
                if (blob) {
                    hasUploadedFiles = true;
                    // Create a File object from the blob to maintain the original type
                    const file = new File([blob], `image-${index}.${imageFormat.split('/')[1]}`, {
                        type: imageFormat
                    });
                    console.log(file)
                    formData.append('images', file);
                }
            });



            // Log the FormData contents for debugging
            for (let pair of formData.entries()) {
                console.log(pair[0], pair[1]);
            }

            const response = await fetch(`/admin/product/edit/${productId}`, {
                method: 'PUT',
                body: formData
            });

            const result = await response.json();

            if (!response.ok) {
                throw new Error(result.message || 'Failed to update product');
            }

            notyf.success('Product updated successfully');
            window.location.href = '/admin/products';
        } catch (error) {
            notyf.error(error.message || 'Failed to update product');
            console.error('Update error:', error);
        } finally {
            hideSpinner();
        }
    });

</script>
<script src="https://cdn.jsdelivr.net/npm/notyf@3/notyf.min.js"></script>
<script src="/js/admin_script.js"></script>
<script src="/js/product_script.js"></script>