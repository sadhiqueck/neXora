<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

<body class="bg-gray-100">
    <div class=" mx-auto px-4 py-8">

        <!-- Header -->
        <div class="flex justify-between items-center mb-8">
            <h1 class="text-3xl font-bold text-gray-800">Sales Report</h1>

            <div class="flex space-x-4 ">
                <button id="downloadPdf" class="bg-indigo-500 text-white px-4 py-2 rounded-lg hover:bg-indigo-600">
                    <i class="fa-solid fa-download"></i> Download PDF
                </button>
                <button id="downloadExcel" class="bg-green-500 text-white px-4 py-2 rounded-lg hover:bg-green-600">
                    <i class="fa-regular fa-file-excel"></i> Download Excel
                </button>
            </div>
        </div>

        <!-- Filters -->
        <form class=" p-6 bg-white rounded-lg shadow-sm  mb-8">
            <div class="flex flex-wrap gap-4 items-end">
                <div>
                    <label class="block text-sm font-medium text-gray-700">Select Period</label>
                    <select name="period" id="periodSelect" class="mt-1 block rounded-md border-gray-300 shadow-sm">
                        <option value="daily" disabled selected>Filter</option>
                        <option value="daily" <%=period==='daily' ? 'selected' : '' %>>Daily</option>
                        <option value="weekly" <%=period==='weekly' ? 'selected' : '' %>>Weekly</option>
                        <option value="monthly" <%=period==='monthly' ? 'selected' : '' %>>Monthly</option>
                        <option value="custom" <%=period==='custom' ? 'selected' : '' %>>Custom</option>
                    </select>
                </div>

                <div class="flex gap-4 <%= period !== 'custom' ? 'hidden' : '' %>" id="customDateInput">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Start Date</label>
                        <input type="date" name="startDate" value="<%= startDate %>"
                            class="mt-1 block rounded-md border-gray-300 shadow-sm">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">End Date</label>
                        <input type="date" name="endDate" value="<%= endDate %>"
                            class="mt-1 block rounded-md border-gray-300 shadow-sm">
                    </div>
                </div>


                <button type="submit" class="bg-purple-500 text-white px-4 py-2 rounded-lg hover:bg-purple-600">
                    Apply Filters
                </button>
            </div>
        </form>
        <main class="container">
            <!-- Metrics Cards -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
                <!-- Total Sales Card -->
                <div class="bg-white p-6 rounded-xl shadow-sm">
                    <h3 class="text-gray-500 text-sm mb-2">Total Sales</h3>
                    <p class="text-3xl font-bold text-gray-800">
                        <%= totalSales.toLocaleString('en-IN',{style:'currency',currency:"INR"}) %>
                    </p>
                </div>

                <!-- Total Orders Card -->
                <div class="bg-white p-6 rounded-xl shadow-sm">
                    <h3 class="text-gray-500 text-sm mb-2">Total Orders</h3>
                    <p class="text-3xl font-bold text-indigo-800">
                        <%= totalOrders %>
                    </p>
                </div>

                <!-- Average Order Value Card -->
                <div class="bg-white p-6 rounded-xl shadow-sm">
                    <h3 class="text-gray-500 text-sm mb-2">Average Order Value</h3>
                    <p class="text-3xl font-bold text-gray-800">
                        <%= averageOrderValue.toLocaleString('en-IN',{style:'currency',currency:"INR"}) %>
                    </p>
                </div>
                <!-- Total Discounts Card -->
                <div class="bg-white p-6 rounded-xl shadow-sm">
                    <h3 class="text-gray-500 text-sm mb-2">Total Discounts</h3>
                    <p class="text-3xl font-bold text-red-600">
                        <%= totalDiscounts.toLocaleString('en-IN',{style:'currency',currency:"INR"}) %>
                    </p>
                </div>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <!-- Total Revenue Card -->
                <div class="col-span-1 bg-white p-6 w-full rounded-xl shadow-sm">
                    <h3 class="text-gray-500 text-sm mb-2">Total Revenue</h3>
                    <p class="text-3xl font-bold text-green-600">
                        <%= (totalSales - totalDiscounts).toLocaleString('en-IN',{style:'currency',currency:"INR"}) %>
                    </p>
                </div>

                <!-- Top Category Card -->
                <div class="col-span-3 bg-white p-6 rounded-xl shadow-sm">
                    <h3 class="text-gray-500 text-sm mb-2">Top Category</h3>
                    <p class="text-3xl font-bold text-indigo-800">
                        <% if (categorySales.length> 0) { %>
                            <%= categorySales[0].categoryName %>
                                <% } else { %>
                                    N/A
                                    <% } %>
                    </p>
                </div>
            </div>




            <!-- Charts Section -->
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
                <!-- Revenue Trend Chart -->
                <div class="bg-white p-6 rounded-xl shadow-sm">
                    <h2 class="text-xl font-semibold mb-4">Revenue Trend</h2>
                    <div class="h-80">
                        <canvas id="revenueChart"></canvas>
                    </div>
                </div>

                <!-- Category Distribution Chart -->
                <div class="bg-white p-6 rounded-xl shadow-sm">
                    <h2 class="text-xl font-semibold mb-4">Category Distribution</h2>
                    <div class="h-80">
                        <canvas id="categoryChart"></canvas>
                    </div>
                </div>
            </div>

            <!-- Recent Orders Table -->
            <div class="bg-white rounded-xl shadow-sm overflow-hidden">
                <div class="p-6">
                    <h2 class="text-xl font-semibold mb-4">Recent Orders</h2>
                    <div class="overflow-x-auto">
                        <table class="w-full">
                            <thead>
                                <tr class="text-left text-gray-500 border-b">
                                    <th class="pb-3">Order ID</th>
                                    <th class="pb-3">Customer</th>
                                    <th class="pb-3">Date</th>
                                    <th class="pb-3">Applied Coupon</th>
                                    <th class="pb-3">Amount</th>
                                    <th class="pb-3">Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% RecentOrders.forEach(order=> { %>
                                    <tr class="hover:bg-gray-50">
                                        <td class="py-4">
                                            <%= order.orderNumber %>
                                        </td>
                                        <td>
                                            <%= order.userId?.email || 'Guest' %>
                                        </td>
                                        <td>
                                            <%= new Date(order.orderDate).toLocaleDateString('en-IN', { year: 'numeric'
                                                , month: 'short' , day: 'numeric' }) %>
                                        </td>
                                        <td>
                                            <% if(order.couponApplied.discount!==0){ %>
                                                <%=order.couponApplied.discount.toLocaleString('en-IN',{style:'currency',currency:"INR"})%>
                                                    <span class="text-indigo-500"> (<%=order.couponApplied.code%>
                                                            )</span>
                                                    <% }else{ %>
                                                        NIL
                                                        <% } %>
                                        </td>
                                        <td>
                                            <%= order.total.toLocaleString('en-IN',{style:'currency',currency:"INR"}) %>
                                        </td>
                                        <td><span class="px-2 py-1 bg-green-100 text-green-800 rounded-full text-sm">
                                                <%= order.status %>
                                            </span></td>
                                    </tr>
                                    <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        // Revenue Trend Chart
        const revenueData = JSON.parse('<%- JSON.stringify(revenueData) %>')
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');
        new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: revenueData.map(d => d._id),
                datasets: [{
                    label: 'Revenue',
                    data: revenueData.map(d => d.total),
                    borderColor: '#652fe8',
                    tension: 0.4,
                    fill: false
                }]
            }
        });

            // Category Distribution Chart
            const categoryData = JSON.parse('<%- JSON.stringify(categoryData) %>');
            const categoryCtx = document.getElementById('categoryChart').getContext('2d');
            new Chart(categoryCtx, {
                type: 'doughnut',
                data: {
                    labels: categoryData.map(d => d._id),
                    datasets: [{
                        data: categoryData.map(d => d.total),
                        backgroundColor: ['#3B82F6', '#10B981', '#F59E0B', '#EF4444']
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false
                }
            });

        // pdf dopcwnload option

        document.getElementById('downloadPdf').addEventListener('click', () => {
            const element = document.querySelector('.container');
            html2canvas(element).then((canvas) => {
                const imgData = canvas.toDataURL('image/png');
                const pdf = new jspdf.jsPDF('p', 'mm', 'a4'); // A4 size page
                const imgWidth = 210;
                const imgHeight = (canvas.height * imgWidth) / canvas.width;

                // Add heading text
                pdf.setFont('helvetica', 'bold');
                pdf.setFontSize(18);
                pdf.text('Sales Report', 105, 20, { align: 'center' });

                // Add current date
                const currentDate = new Date().toLocaleDateString('en-IN', { dateStyle: 'long' });
                pdf.setFontSize(12);
                const pageWidth = pdf.internal.pageSize.width;
                pdf.text(`Date: ${currentDate}`, pageWidth - 20, 20, { align: 'right' });

                const marginTop = 30; // Adjusted margin from the top
                pdf.addImage(imgData, 'PNG', 0, marginTop, imgWidth, imgHeight);

                pdf.save('sales_report.pdf');
            });
        });

        // excel sheet 
        document.getElementById('downloadExcel').addEventListener('click', async () => {
            // Fetch all orders
            const orders = await fetchAllOrders();

            // Prepare data for the Orders sheet
            const ordersData = [];
            const headers = ['Order ID', 'Customer', 'Date', 'Applied Coupon', 'Amount', 'Status'];
            ordersData.push(headers);

            orders.forEach(order => {
                const rowData = [
                    order.orderNumber,
                    order.userId?.email || 'Guest',
                    new Date(order.orderDate).toLocaleDateString('en-IN', { year: 'numeric', month: 'short', day: 'numeric' }),
                    `${order.couponApplied.code || 'NIL'} (₹${(order.couponApplied.discount || 0).toFixed(2)})`,
                    `₹${order.total.toFixed(2)}`,
                    order.status
                ];
                ordersData.push(rowData);
            });

            // Prepare data for the Metrics sheet
            const totalSales = orders.reduce((sum, order) => sum + order.total, 0);
            const totalDiscounts = orders.reduce((sum, order) => sum + (order.discountApplied || 0), 0);
            const totalOrders = orders.length;
            const averageOrderValue = totalSales / totalOrders;

            const metricsData = [
                ['Metric', 'Value'],
                ['Total Sales', `₹${totalSales.toFixed(2)}`],
                ['Total Orders', totalOrders],
                ['Average Order Value', `₹${averageOrderValue.toFixed(2)}`],
                ['Total Discounts', `₹${totalDiscounts.toFixed(2)}`]
            ];

            // Create worksheets
            const ordersWs = XLSX.utils.aoa_to_sheet(ordersData);
            const metricsWs = XLSX.utils.aoa_to_sheet(metricsData);

            // Create a workbook
            const wb = XLSX.utils.book_new();
            XLSX.utils.book_append_sheet(wb, ordersWs, 'Orders');
            XLSX.utils.book_append_sheet(wb, metricsWs, 'Metrics');

            // Generate Excel file and trigger download
            XLSX.writeFile(wb, 'Sales_report.xlsx');
        });


        const periodSelect = document.getElementById("periodSelect");
        const customDateInput = document.getElementById("customDateInput");

        function toggleCustomDateInput() {
            if (periodSelect.value === "custom") {
                customDateInput.classList.remove("hidden");
            } else {
                customDateInput.classList.add("hidden");
            }
        }

        // Initial check (for pre-selected "custom" option)
        toggleCustomDateInput();

        // Add event listener for dropdown change
        periodSelect.addEventListener("change", toggleCustomDateInput);


        async function fetchAllOrders() {
            try {
                const response = await fetch('/admin/orders/report');
                const data = await response.json();
                return data;
            } catch (error) {
                console.error('Error fetching orders:', error);
                return [];
            }
        }




    </script>
</body>