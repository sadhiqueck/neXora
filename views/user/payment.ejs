<body class="bg-gray-50">

    <!-- Progress Steps -->
    <div class="max-w-3xl mx-auto p-4 ">
        <div class="flex items-center justify-between mb-8">
            <a href="/user/selectAddress">
                <div class="flex items-center">
                    <div class="bg-gray-200 text-gray-400 rounded-full h-8 w-8 flex items-center justify-center">
                        <span class="text-sm">1</span>
                    </div>
                    <span class="ml-2 text-sm font-medium text-gray-400">Address</span>
                </div>
            </a>
            <a href="/user/shipping">
                <div class="flex items-center">
                    <div class="bg-gray-200 text-gray-400 rounded-full h-8 w-8 flex items-center justify-center">
                        <span class="text-sm">2</span>
                    </div>
                    <span class="ml-2 text-sm font-medium  text-gray-400">Shipping</span>
                </div>
            </a>
            <div class="flex items-center">
                <div class="bg-purple-600 text-white rounded-full h-8 w-8 flex items-center justify-center">
                    <span class="text-sm">3</span>
                </div>
                <span class="ml-2 text-sm font-medium">Payment</span>
            </div>
        </div>
    </div>

    <div class="min-h-screen py-8">
        <div class="container mx-auto px-4 max-w-[90%]">
            <div class="flex flex-col lg:flex-row gap-8">
                <!-- Left Column -->
                <div class="w-full lg:w-2/3 space-y-6">

                    <div class="bg-white p-6 rounded-lg shadow">
                        <!-- Shipping Address -->
                        <div class="flex justify-between items-center mb-4">
                            <h2 class="text-lg font-semibold pl-2">Shipping Address</h2>
                            <a href="/user/selectAddress" class="text-blue-600 hover:text-blue-800">Change</a>
                        </div>
                        <div class="border p-4 rounded bg-gray-50">
                            <p class="font-medium">
                                <%= selectedAddress.fullName %>
                            </p>
                            <p class="text-gray-600">
                                <%=selectedAddress.addressLine1%>,<%=selectedAddress.addressLine2%>,
                                        <%=selectedAddress.landmark%> <br>
                                            <%=selectedAddress.city %>, <%=selectedAddress.state %>, India <br>
                                                    PIN: <%=selectedAddress.pincode %>
                            </p>
                        </div>
                        <!-- Contact Details -->
                        <div class="bg-white p-4 rounded-lg ">
                            <h2 class="text-lg font-semibold">Contact Details</h2>
                            <p class="text-gray-600 mt-2">Email: <%= user.email%>
                            </p>
                            <p class="text-gray-600">Phone:+91 <%=selectedAddress.phone%>
                            </p>
                        </div>


                        <!-- Shipping Date -->
                        <div class="bg-white p-6 rounded-lg ">
                            <h2 class="text-lg font-semibold mb-4">Delivery Date</h2>
                            <div class="flex items-center text-gray-700">
                                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                                </svg>
                                <span>Expected delivery by <%= new
                                        Date(deliveryDate).toLocaleString('en-IN',{dateStyle:'medium'}) %> </span>
                                <span class="text-purple-500"><i> (<%=deliveryType%>)</i></span>

                            </div>
                        </div>
                    </div>


                    <!-- Payment Methods -->
                    <div class="bg-white p-6 rounded-lg shadow">
                        <h2 class="text-lg font-semibold mb-4">Payment Method</h2>
                        <div class="space-y-4">
                            <!-- Cash on Delivery Option -->
                            <label class="block cursor-pointer">
                                <input type="radio" name="payment" class="hidden peer" value="COD">
                                <div
                                    class="p-6 rounded-xl border-2 peer-checked:border-purple-600 peer-checked:bg-purple-50 hover:border-purple-200 transition-all">
                                    <div class="flex items-center gap-4">
                                        <div
                                            class="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-purple-600"
                                                fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                    d="M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z" />
                                            </svg>
                                        </div>
                                        <div class="flex-1">
                                            <h3 class="font-medium">Cash on Delivery</h3>
                                            <p class="text-sm text-gray-600">Pay when you receive your order</p>
                                        </div>
                                    </div>
                                </div>
                            </label>

                            <!-- RazorPay  Payment Option -->

                            <label class="block cursor-pointer">
                                <input type="radio" name="payment" class="hidden peer" value="Razorpay">
                                <div
                                    class="p-6 rounded-xl border-2 peer-checked:border-purple-600 peer-checked:bg-purple-50 hover:border-purple-200 transition-all">
                                    <div class="flex items-center gap-4">
                                        <div
                                            class="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center">
                                            <img src="https://razorpay.com/assets/razorpay-glyph.svg" alt="Razorpay"
                                                class="h-6 w-6">
                                        </div>
                                        <div class="flex-1">
                                            <h3 class="font-medium">Secure Online Payment</h3>
                                            <p class="text-sm text-gray-600">Credit/Debit Cards, UPI, Net Banking</p>
                                        </div>
                                    </div>
                                </div>
                            </label>

                            <!-- Wallet Option -->
                            <label class="block cursor-pointer">
                                <input type="radio" name="payment" class="hidden peer" value="Wallet">
                                <div
                                    class="p-6 rounded-xl border-2 peer-checked:border-purple-600 peer-checked:bg-purple-50 hover:border-purple-200 transition-all">
                                    <div class="flex items-center gap-4">
                                        <div
                                            class="w-12 h-12 bg-purple-100 rounded-full flex items-center justify-center">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-purple-600"
                                                fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                    d="M12 6v12m-3-2.818l.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                            </svg>
                                        </div>
                                        <div class="flex-1">
                                            <h3 class="font-medium">Wallet</h3>
                                            <p class="text-sm text-gray-600">Balance: â‚¹676</p>
                                        </div>
                                    </div>
                                </div>
                            </label>
                        </div>
                    </div>
                    <!-- back button   -->

                    <a href="/user/shipping">
                        <div class="flex gap-4 mt-8 ">
                            <button
                                class=" w-full px-6 py-3 border border-purple-600 text-purple-600 rounded-lg hover:bg-purple-50 transition-colors">
                                Go to Ship Method
                            </button>
                    </a>
                </div>


            </div>

            <!-- Right Column - Order Summary -->
            <div class="w-full lg:w-1/3">
                <div class="bg-white p-6 rounded-lg shadow sticky top-4">
                    <h2 class="text-lg font-semibold mb-4">Order Summary</h2>

                    <!-- Coupon Code -->
                    <div class="mb-6">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Have a coupon?</label>
                        <div class="flex gap-2">
                            <input type="text" placeholder="Enter code"
                                class="flex-1 p-2 border rounded focus:ring-2 focus:ring-blue-500 outline-none">
                            <button aria-labelledby="Apply discount"
                                class="bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-800">Apply</button>
                        </div>
                    </div>

                    <!-- Amount Breakdown -->
                    <div class="space-y-4">

                        <div class="flex justify-between ">
                            <p class="text-gray-700 font-medium">Subtotal (<%=cartItemCount%> items)</p>
                            <p class="text-gray-600 font-small">
                                <%=originalTotal.toLocaleString('en-IN',{style:'currency', currency:'INR'})%>
                            </p>
                        </div>
                        <div class="flex justify-between  text-gray-700">
                            <p class=" font-medium">Discounts</p>
                            <p class=" font-small">
                                <%= totalSavings.toLocaleString('en-IN',{style:'currency', currency:'INR'}) %>
                            </p>
                        </div>
                        <div class="flex justify-between text-gray-700">
                            <p class=" font-medium">Delivery Charge</p>
                            <% if(deliveryCharge===0) {%>
                                <p class=" font-small deliveryCharge"><span class="line-through">â‚¹99.00</span> <span
                                        class="text-green-600">Free Delivery</span></p>
                                <% }else {%>
                                    <p class=" font-small deliveryCharge"><span>â‚¹<%=
                                                deliveryCharge.toLocaleString("en-IN")%>.00</span>
                                    </p>
                                    <% } %>

                        </div>
                        <div class="flex justify-between text-gray-700">
                            <p class=" font-medium">Coupon Applied</p>
                            <p class=" font-small text-button-color">-â‚¹0.00</p>
                        </div>
                        <div class="flex justify-between text-gray-700">
                            <p class=" font-medium">GST (18%)</p>
                            <p class=" font-small">â‚¹<%=Math.round(tax).toLocaleString("en-IN")%>.00</p>
                        </div>
                        <div class="flex justify-between text-lg font-bold">
                            <p>Total</p>
                            <p>â‚¹<%= subTotal.toLocaleString("en-IN")%>.00</p>
                        </div>
                    </div>
                    <button onclick="placeOrder()"
                        class="w-full bg-button-color text-white py-3 rounded-lg hover:bg-purple-800 font-medium mt-6">
                        Place Order
                    </button>
                    <!-- spinner cvode -->
                    <div id="loadingSpinner"
                        class=" hidden fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                        <div class="bg-white rounded-lg p-8 flex flex-col items-center space-y-4">
                            <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-purple-600">
                            </div>
                            <div class="text-xl font-semibold text-gray-800">Payment Processing</div>
                            <div class="text-sm text-gray-600">Please wait while we process your request</div>
                            <div class="text-xs text-red-600">Do not reload or refresh this page</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
</body>
<!-- razorpay -->
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>

    async function handleRazorpayPayment(total) {
        try {
            showSpinner();

            // Create order on your server
            const createOrderResponse = await fetch('/user/create-razorpay-order', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
            console.log(createOrderResponse)
            if (createOrderResponse.status == 404) {
                notyf.error('Sorry, Product went Stock out')
                setTimeout(() => {
                    window.location.href = '/user/cart'
                }, 500);

            } else if (!createOrderResponse.ok) {
                throw new Error('Failed to create order');

            }

            const { order } = await createOrderResponse.json();

            // Razorpay options
            const options = {
                key: '<%= razorpayKey %>',
                amount: order.amount,
                currency: 'INR',
                name: 'Nexora',
                description: 'Order Payment',
                order_id: order.id,

                prefill: {
                    name: '<%= user.name %>',
                    email: '<%= user.email %>',
                    contact: '<%= selectedAddress.phone %>'
                },
                theme: {
                    color: '#7e3af2',
                    hide_topbar: false
                },
                notes: {
                    order_type: 'Standard',
                    shipping_address: order.shippingAddress,
                    customer_id: order.userId
                },
                // Modal Configuration
                modal: {
                    confirm_close: true,
                    escape: true,
                    animation: true,
                    backdropClose: false
                },

                image: '/images/lOGO.png',

                handler: async function (response) {
                    // Verify payment on your server
                    const verificationResponse = await fetch('/user/verify-payment', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            razorpay_payment_id: response.razorpay_payment_id,
                            razorpay_order_id: response.razorpay_order_id,
                            razorpay_signature: response.razorpay_signature
                        })
                    });

                    if (verificationResponse.ok) {
                        window.location.href = '/user/order-success';
                    } else {
                        notyf.error('Payment verification failed');
                    }
                },

                modal: {
                    ondismiss: function () {
                        // Handle modal dismissal
                        console.log('Payment modal closed');
                        notyf.error('Payment cancelled. Please try again.');
                    },
                    escape: false
                },
                payment_failed: function (response) {
                    const errorDetail = response.error || {};
                    notyf.error(`Payment failed: ${errorDetail.description}`);
                    console.error('Payment Failed:', errorDetail);
                },

            }

            const rzp = new Razorpay(options);
            rzp.open();

            rzp.on('payment.failed', function (response) {
                notyf.error(`Payment failed: ${response.error.description}`);
            });

        } catch (error) {
            console.error('Payment error:', error);
            notyf.error('Payment processing failed. Please try again.');
        } finally {
            hideSpinner()
        }
    }

    const placeOrder = () => {
        try {
            showSpinner();

            const selectedPayment = document.querySelector('input[name="payment"]:checked');

            if (!selectedPayment) {
                notyf.error('Please select a payment method');
                return;
            }

            if (selectedPayment.value === 'Razorpay') {
                handleRazorpayPayment('<%= total %>');
            } else {
                // Handle COD or other methods
                console.log('cod')
                fetch('/user/place-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ paymentMethod: selectedPayment.value })
                })
                    .then(response => {
                        console.log(response)
                        if (response.ok) {
                            window.location.href = '/user/order-success';
                        } else if (response.status == 404) {
                            notyf.error('Sorry, Product went Stock out')
                            setTimeout(() => {
                                window.location.href = '/user/cart'
                            }, 500);
                        } else {
                            notyf.error("Failed to place order");
                        }
                    })
                    .catch(err => {
                        console.error('Error:', err);
                        notyf.error('Network error. Please try again.');
                    });
            }
        } catch (error) {
            console.log(error);
            notyf.error("Some internal error cause. Try later")
        } finally {
            hideSpinner()
        }

    };
</script>